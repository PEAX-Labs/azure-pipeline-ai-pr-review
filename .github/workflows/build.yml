name: Build and Package Extension

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Update version numbers
      run: |
        # Get current version from vss-extension.json
        CURRENT_VERSION=$(node -p "require('./vss-extension.json').version")
        # Increment patch version
        NEW_VERSION=$(node -p "const [major, minor, patch] = '$CURRENT_VERSION'.split('.'); [major, minor, parseInt(patch) + 1].join('.')")
        
        # Update vss-extension.json
        node -p "const fs=require('fs'); const pkg=require('./vss-extension.json'); pkg.version='$NEW_VERSION'; fs.writeFileSync('./vss-extension.json', JSON.stringify(pkg, null, 2))"
        
        # Update task.json
        node -p "const fs=require('fs'); const pkg=require('./SmartCodeReviewer/task.json'); pkg.version.Patch='$NEW_VERSION'.split('.')[2]; fs.writeFileSync('./SmartCodeReviewer/task.json', JSON.stringify(pkg, null, 2))"

    - name: Install dependencies
      run: |
        cd SmartCodeReviewer
        npm install
        cd ..

    - name: Build TypeScript
      run: |
        cd SmartCodeReviewer
        npm run build
        cd ..

    - name: Install tfx-cli
      run: npm install -g tfx-cli@latest

    - name: Package Extension
      run: tfx extension create --manifest-globs vss-extension.json

    - name: Upload Extension
      uses: actions/upload-artifact@v4
      with:
        name: smart-code-reviewer-extension
        path: "*.vsix"
        retention-days: 30 